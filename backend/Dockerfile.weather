# syntax=docker/dockerfile:1
FROM golang:1.18-alpine AS build

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN go build -o weather ./cmd/weather

# Start a new stage from scratch
FROM alpine:latest

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=build /app/weather .

# Introduce environment variable
ENV MONGODB_URI = "mongodb+srv://testuser:testuser@users.n6ag96y.mongodb.net/?retryWrites=true&w=majority&appName=users"
ENV GOOGLE_MAPS_KEY = "AIzaSyC2feE-um1mJ7fBXOyQ4ASykJ54lpyM9ag"
ENV WEATHER_URL = "https://archive-api.open-meteo.com/v1/archive"

# Expose port 8082 to the outside world
EXPOSE 8081

# Command to run the executable
CMD ["./weather"]
